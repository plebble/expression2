@name SliderGUI
@inputs EGP:wirelink Entity:entity
@outputs A B C D Cursor:vector2 Bar Height
@persist A B C D
@trigger 
runOnTick(1)

function void setHeight(Index,Height)
{
    local IHeight = 500 - Height
    EGP:egpPos(Index,vec2(EGP:egpPos(Index):x(),Height + 6))
    EGP:egpSize(Index,vec2(EGP:egpSize(Index):x(),IHeight))
    
}

if(first() | dupefinished())
{
    EGP:egpDrawTopLeft(1)
    EGP:egpRoundedBox(1,vec2(6,6),vec2(116,500))
    EGP:egpRoundedBox(2,vec2(134,6),vec2(116,500))
    EGP:egpRoundedBox(3,vec2(262,6),vec2(116,500))
    EGP:egpRoundedBox(4,vec2(390,6),vec2(116,500))
    
    EGP:egpRoundedBoxOutline(5,vec2(4,4),vec2(120,504))
    EGP:egpRoundedBoxOutline(6,vec2(132,4),vec2(120,504))
    EGP:egpRoundedBoxOutline(7,vec2(260,4),vec2(120,504))
    EGP:egpRoundedBoxOutline(8,vec2(388,4),vec2(120,504))
    
    EGP:egpText(9,"100%",vec2(26,256))
    EGP:egpText(10,"100%",vec2(154,256))
    EGP:egpText(11,"100%",vec2(282,256))
    EGP:egpText(12,"100%",vec2(410,256))
    
    EGP:egpColor(1,vec(255,0,0))
    EGP:egpColor(2,vec(0,0,255))
    EGP:egpColor(3,vec(0,255,0))
    EGP:egpColor(4,vec(255,255,0))
    
    
    EGP:egpColor(9,vec(0,255,255))
    EGP:egpColor(10,vec(255,255,0))
    EGP:egpColor(11,vec(255,0,255))
    EGP:egpColor(12,vec(0,0,255))
    
    EGP:egpSize(9,30)
    EGP:egpSize(10,30)
    EGP:egpSize(11,30)
    EGP:egpSize(12,30)
    
    A = 1
    B = 1
    C = 1
    D = 1
}

X = sign(Entity:keyUse() + Entity:keyAttack1())
Cursor = EGP:egpCursor(Entity)
Bar = floor(Cursor:x() / 128) + 1

if(X & Bar > 0)
{
    Height = clamp(Cursor:y(),6,506) - 6
    switch(Bar)
    {
        case 1,A = 1-(Height / 500),break
        case 2,B = 1-(Height / 500),break
        case 3,C = 1-(Height / 500),break
        case 4,D = 1-(Height / 500),break
    }
    setHeight(Bar,Height)
}

EGP:egpSetText(9,(round(A,2) * 100):toString() + "%")
EGP:egpSetText(10,(round(B,2) * 100):toString() + "%")
EGP:egpSetText(11,(round(C,2) * 100):toString() + "%")
EGP:egpSetText(12,(round(D,2) * 100):toString() + "%")
