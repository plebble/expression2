@name HoverBoardThrusterNoZ
@inputs W A S D Distance Active
@outputs
@persist Vector:vector LVector:vector X Y TuningX TuningY  Debug
runOnTick(1)

EE=entity(),EA=(EE:angles()*20+EE:angVel())
EV=EE:pos(),ER=EE:right(),EF=EE:forward(),EU=EE:up()
Lev=sqrt((EE:inertia():length()^2)/3)
EE:applyOffsetForce( EU*EA:pitch(),EV+EF*Lev)
EE:applyOffsetForce(-EU*EA:pitch(),EV-EF*Lev)
EE:applyOffsetForce( EU*EA:roll() ,EV+ER*Lev)
EE:applyOffsetForce(-EU*EA:roll() ,EV-ER*Lev)



TuningX = 0
TuningY = 0
ForwardThrust = 50

Debug = 1

if(W)
{
    X = ForwardThrust
}
elseif(S)
{
    X = -35
}
else
{
    X = 0
}

if(D)
{
    Y = 5
}
elseif(A)
{
    Y = -5
}
else
{
    Y = 0
}
if(first() & Debug)
{
    holoCreate(1,Vector)
    holoModel(1,"hq_sphere")
    holoScale(1,vec(0.5,0.5,0.5))
    holoColor(1,vec(250,0,0),255)
}

LVector = vec(X+TuningX,Y+TuningY,0)

Vector = entity():toWorld(LVector)

if(Debug)
{
    holoPos(1,Vector)
}

if(Y|X)
{
    entity():applyForce(Vector - entity():pos())
}
