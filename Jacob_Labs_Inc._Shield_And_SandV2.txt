@name Jacob Labs Inc. Shield And SandV3
@inputs Deploy Blind
@outputs Gun Reload Homepos:vector
@persist [OS IS P]:entity DeployI [Key OModel IModel]:string OMass IMass Height
@trigger all
@model models/hunter/blocks/cube05x05x05.mdl

Chip = entity():pos()
Me = owner():shootPos() + vec(0,0,75)
Speed = entity():vel()
Weight = entity():mass()
E = entity()

if (owner():lastSaid()=="!show") {entity():setColor(255,255,255,255)}
if (owner():lastSaid()=="!hide") {entity():setColor(0,0,0,0)}

#E:setAng(owner():eyeAngles())

Homepos = owner():aimPos()

interval(10)
V = Me - Chip
applyForce((V * 50 - Speed) * Weight)

if (owner():keyUse() && owner():keyDuck())
{
    Gun = 1
}
else
{
    Gun = 0
}

if (owner():keyReload())
{
    Reload = 1
}
else
{
    Reload = 0
}

if (first()) {
runOnTick(1)

#-------------------------------------------------------------------------------------------------------------------------------------Options
Key = "H" #The key on your keyboard that will control this chip. Comment out this line to disable. http://wiki.garrysmod.com/page/Enums/KEY. Case insensitive, exclude 'KEY_'"
OModel = "models/props_phx/construct/metal_plate_curve360x2.mdl"
IModel = "models/props_phx/construct/metal_tubex2.mdl"

OMass = 50000 # Set mass of outer shield, the heavier the shield, the more effective but dangerous it is.
IMass = 150 # Inner shield mass

Height = 20 # Very arbitrary outer shield height adjustment. 0 is almost level with ground, 20 allows you to traverse most terran.
#-------------------------------------------------------------------------------------------------------------------------------------
P = owner()
}

DeployI = P:keyPressed(Key)

if ((DeployI & $DeployI) | (~Deploy & Deploy)) #If pressed this tick
    {Input = 1}


if (OS) {
OA = OS:angles()
OP = OA:pitch()
OR = OA:roll()

if ( (Input & OS) | (OS:pos():distance(P:pos()) > 100) | OP < -20 | OP > 20 | OR < -20 | OR > 20 ) # Break shield if out of whack or toggled
    {OS:propBreak()}

if ( (P:isCrouch()) & OS) # Adjust height if crouching and spawn inner shield
{
    OHeight = 27
    if (!IS)
    {
        IS = propSpawn(IModel,(P:pos()),(ang()),0)
        IS:setMaterial("models/alyx/emptool_glow")
        IS:setMass(IMass)
    }
}
    elseif (IS) {IS:propBreak()}

if ( !(P:isCrouch()) ) {OHeight = 63-Height} # Adjust height if standing up. 63 matches up with ground.

OS:applyForce( ( (owner():shootPos() + vec(0,0,-OHeight) - (OS:pos()) ) * 10 - OS:vel() ) * OMass ) # Move with player

OS:applyAngForce( -(OA:setYaw(0) * 20 + OS:angVel()) * OS:mass()) # Maintain angle even if shot


IA = IS:angles()
IP = IA:pitch()
IR = IA:roll()

if ( (Input & IS) | (IS:pos():distance(P:pos()) > 50) | IP < -5 | IP > 5 | IR < -5 | IR > 5 ) # Break shield if out of whack or toggled
    {IS:propBreak()}

IS:applyForce( ( (owner():shootPos() + vec(0,0,-27) - (IS:pos()) ) * 10 - IS:vel() ) * IMass ) # Move with player

IS:applyAngForce( -(IA:setYaw(0) * 20 + IS:angVel()) * IS:mass()) # Maintain angle even if shot
}
    elseif (IS)
        {IS:propBreak()}

if (Input & !OS) # Deploy shield
{
    OS = propSpawn(OModel,(P:pos()),(ang()),0)
    OS:setMaterial("models/alyx/emptool_glow")
    OS:setMass(OMass)
}

 
#-------------------------------------------------------------------------------------------------------------------------------------Options
Keyb = "G" #The key on your keyboard that will control this chip. Comment out this line to disable. http://wiki.garrysmod.com/page/Enums/KEY. Case insensitive, exclude 'KEY_'"    
    
Delaytime = 8000 #duration blinded milliseconds (before fade starts)
FadeInt = 80 #interval in which fading is progressed. Lower numbers is faster fading 
HS = 8 #holo scale 8 default

Gone = 255 # 0 - 255. Opacity level sphere will completely dissappear at (be deleted). A lower number means sphere dissappears sooner.

Range = 50000 #Range you can throw your pocket sand. SH-SH-SHA!

Model = "hq_sphere"
#"icosphere3" #less polygons
#-------------------------------------------------------------------------------------------------------------------------------------
P = owner()

BlindI = P:keyPressed(Keyb)

if (((BlindI & $BlindI) | (~Blind & Blind)))   #if blinded again, reset transparency and timers
    {
        TargetEnt = P:aimEntity()
        P:soundPlay(0,4,"impacts/impact_01.wav")
        if (P:pos():distance(TargetEnt:pos()) <= Range)
        {
            A = 0
            I = 0
            holoDelete(1)
            stoptimer("fade")
            stoptimer("opaque")
            timer("spawndelay",25)
        }
    }

if (clk("spawndelay")) #spawn opaque holosphere around target. spawndelay needed for strange glitch workaround where holo wouldn't delete
{
    stoptimer("spawndelay")
    TargetEnt:soundPlay(1,4,"impacts/impact_01.wav")
    holoCreate(1)
    holoPos(1, TargetEnt:shootPos())
    holoScale(1, vec(-HS,HS,HS))
    holoColor(1, vec(255,220,220))
    holoMaterial(1,"models/debug/debugwhite")
    holoParent(1,TargetEnt)
    holoModel(1,Model)
    holoShadow(1,0)
    timer("opaque",Delaytime)
}

if (clk("opaque"))  #opaque time now over, begin fade sequence
{
    A = 1
    stoptimer("opaque")
    timer("fade",FadeInt)
}

if (A & clk("fade"))              #fade sequence
{
    stoptimer("fade")
    timer("fade",FadeInt)
    I++
    holoAlpha(1,255-I)
    if (I >= Gone)
        {
            A = 0
            I = 0 
            holoDelete(1)
            stoptimer("fade")
        }
}

if (last())
    {holoDeleteAll()}
