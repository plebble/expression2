@name Roomba Battle Royale
@inputs
@outputs Clock Score Colour:vector Dist
@persist Clock Score Colour:vector Model:string
@trigger

function void setColour(NewColour:vector)
{
    entity():setColor(Colour)
    holoColor(1,Colour)
}
if(first())
{
    runOnLast(1)
    runOnTick(1)
    entity():setAng(entity():toWorld(ang(0,random(-180,180),0)))
    entity():setPos(entity():toWorld(vec(0,1,0)))
    Colour = randvec(0,255)
    setColour(Colour)
    Score = 25
    Model = "models/sprops/cuboids/height12/size_1/cube_12x12x12.mdl"
    Offset = 5.5
    NumScale = vec(0.6,0.9,0.7)
    holoCreate(1,entity():toWorld(vec(0,0,12)))
    holoParent(1,entity())
    holoScale(1,vec(0.25,1.5,1))
    holoColor(1,Colour)
    
    holoCreate(2,entity():toWorld(vec(1,-Offset,12)))
    holoParent(2,entity())
    holoAng(2,entity():toWorld(ang(0,-90,0)))
    holoScale(2,NumScale)
    holoModel(2,"models/sprops/misc/alphanum/alphanum_0.mdl")
    
    holoCreate(3,entity():toWorld(vec(1,0,12)))
    holoParent(3,entity())
    holoAng(3,entity():toWorld(ang(0,-90,0)))
    holoScale(3,NumScale)
    holoModel(3,"models/sprops/misc/alphanum/alphanum_0.mdl")
    
    holoCreate(4,entity():toWorld(vec(1,Offset,12)))
    holoParent(4,entity())
    holoAng(4,entity():toWorld(ang(0,-90,0)))
    holoScale(4,NumScale)
    holoModel(4,"models/sprops/misc/alphanum/alphanum_0.mdl")
    
    holoCreate(5,entity():toWorld(vec(-1,Offset,12)))
    holoParent(5,entity())
    holoAng(5,entity():toWorld(ang(0,90,0)))
    holoScale(5,NumScale)
    holoModel(5,"models/sprops/misc/alphanum/alphanum_0.mdl")
    
    holoCreate(6,entity():toWorld(vec(-1,0,12)))
    holoParent(6,entity())
    holoAng(6,entity():toWorld(ang(0,90,0)))
    holoScale(6,NumScale)
    holoModel(6,"models/sprops/misc/alphanum/alphanum_0.mdl")
    
    holoCreate(7,entity():toWorld(vec(-1,-Offset,12)))
    holoParent(7,entity())
    holoAng(7,entity():toWorld(ang(0,90,0)))
    holoScale(7,NumScale)
    holoModel(7,"models/sprops/misc/alphanum/alphanum_0.mdl")
}


Ranger = rangerOffset(entity():toWorld(vec(0,0,0)),entity():toWorld(vec(20,0,0)))
Dist = Ranger:distance()
if(Ranger:distance() < 20)
{
    if(Dist == 0)
    {
        entity():setAng(entity():toWorld(ang(0,180,0)))
    }
    Hit = Ranger:entity()
    if(Hit:model() == Model & Hit:isValid())
    {
        if(Hit:getColor() != entity():getColor())
        {
            Score += 1.25
            Clock = 0
            Hit:propDelete()
        }
    }
    elseif(Hit:type() == "gmod_wire_expression2" & Hit:getName() == entity():getName())
    {
        Wirelink = Hit:wirelink()
        Score += Wirelink["Score",normal] + 10
        #Colour = (Hit:getColor() + Colour) / 2
        #setColour(Colour)
        Hit:propDelete()
    }
    else
    {
        entity():setAng(entity():toWorld(ang(0,random(-180,180),0)):setRoll(0):setPitch(0))
    }
}
Speed = clamp(0.05 * Score,0.05,2)
entity():setPos(entity():toWorld(vec(Speed,0,0)))
entity():propFreeze(1)
Clock += 1
if(Clock > 100 & Score >= 1)
{
    Clock = 0
    Score += -1
    Ent = propSpawn(Model,entity():toWorld(vec(-8,0,0)),1)
    Ent:setColor(Colour)
}

if(changed(Score))
{
    String = "000" + floor(Score):toString()
    holoModel(2,"models/sprops/misc/alphanum/alphanum_" + String:sub(String:length() - 2,String:length() - 2) + ".mdl")
    holoModel(5,"models/sprops/misc/alphanum/alphanum_" + String:sub(String:length() - 2,String:length() - 2) + ".mdl")
    
    holoModel(3,"models/sprops/misc/alphanum/alphanum_" + String:sub(String:length() - 1,String:length() - 1) + ".mdl")
    holoModel(6,"models/sprops/misc/alphanum/alphanum_" + String:sub(String:length() - 1,String:length() - 1) + ".mdl")
    
    holoModel(4,"models/sprops/misc/alphanum/alphanum_" + String:sub(String:length(),String:length()) + ".mdl")
    holoModel(7,"models/sprops/misc/alphanum/alphanum_" + String:sub(String:length(),String:length()) + ".mdl")
}

if(last())
{
    propDeleteAll()
}
