@name Flying Thing V6
@inputs Pod:wirelink Plate:array FRef:entity Driver:entity NonSolid:array
@outputs T1 T2 T3 T4 T5 T6 AR AP
@persist Thrust:array Mode TarZ PreR PreAct SubMode PreAlt LastPressed SubMode2 PreCombo LastTime Lmao Parking ParkVal AutoStop Frz TargetAng

runOnTick(1)
runOnKeys(Pod:entity():driver(), 1)

if(dupefinished())
{
    foreach(A, E:entity = NonSolid)
    {
        E:propNotSolid(1)
    }
}

Frz = entity():isFrozen()
if(!Frz)
{
if($Frz == -1){ reset() }
if(Pod["Active", number] && SubMode2 && Pod["Alt", number] && !PreAlt)
{
    AutoStop = !AutoStop
}
AutoStop *= SubMode2

UpsideDown = -sign(FRef:up():z())

if(first()||$Frz == -1){
    entity():propNotSolid(0)
    TargetAng = 45
    Mode=3
    SubMode = 1
    #print(findPlayerByName("cody"):steamID())
    SubMode2 = 1
    Parking = 1
    ParkVal = 101
    
    TarZ=entity():pos():z()
    
    for(A=1,Plate:count()){
        Thrust:pushNumber(0)
    }
    
    function void entity:goRoll(F0_roll){
        This:applyAngForce(This:toLocal(ang(0,0,F0_roll)+This:angles()*ang(1,1,0))*(This:mass()*ang(0,0,40))-This:angVel()*(This:mass()*ang(0,0,6)))
    }
    
    function number getSide(F1_side){
        return (round(F1_side/2)*2==F1_side ? 1 : -1)
    }
    
    foreach(A, E:entity = Plate)
    {
        #E:soundPlay(A, 0, "acf_engines/turbine.wav")
        E:soundPlay(A, 0, "thrusters/hover02.wav")
        soundPitch(A, 0)
    }
    
    rangerPersist(1)
    rangerFilter(entity())
    rangerFilter(entity():getConstraints())
    rangerHitWater(1)
}
LastTime = systime()
Parking = 0
if(0 && !Pod["Active", number] && FRef:vel():length() < 50 && UpsideDown == 1)
{
    Parking = 1
    
    if(ParkVal > 75)
    {
        Parking = 2
    }
    else
    {
        ParkVal+=0.2
    }
}
else
{
    Parking = 0
    ParkVal = 0
}

if(Pod["Mouse1", number] && Pod["Mouse2", number] && Pod["Alt", number] && !PreCombo)
{
    SubMode2 = !SubMode2
}
elseif(Pod["Alt",number]&!PreAlt){
    SubMode=!SubMode
}
PreAlt=Pod["Alt",number]
PreCombo = Pod["Mouse1", number] && Pod["Mouse2", number] && Pod["Alt", number]

if(!(Pod["Active",number] | (1))){
    Mode=3
    for(A=1,Plate:count()){
        Thrust[A,number]=0
    }
}
elseif((Pod["Active",number] | (1))&!PreAct){
    Mode=0
}

PreAct=Pod["Active",number] | (1)

if(Pod["R",number]&!PreR){
    Mode=!Mode
    if(Mode==0){
        TarZ=entity():pos():z()
    }
}
PreR=Pod["R",number]
AR = 0
AP = 0
if(SubMode2){ SubMode = Pod["Space", number] | Pod["Shift", number] }

if(Mode==0){ # Hovermode - Standard
    for(A=1,Plate:count()){
        E=Plate[A, entity]
        Ayy=Pod["Mouse1",number]-Pod["Mouse2",number]
        if(!SubMode&&SubMode2){ SubMode = abs(clamp(FRef:velL():y() / -100, -1, 1)) == 1 && (AutoStop||!Pod["Active", number]) && (Pod["W",number]-Pod["S",number] == 0) }
        if(!SubMode|(A!=3&A!=4)){
            if(SubMode2){
                if(Ayy == 0)
                {
                    Lmao = Ayy
                    Ayy = clamp(FRef:velL():x() / (!Pod["Active", number] ? -400 : -1200), -1, 1) - $Lmao / 20
                }
                else
                {
                    Ayy = Ayy / 4
                }
                if(E:isUnderWater())
                {
                    TarZ = FRef:pos():z() + 50
                }
                else
                {
                    TarZ = rangerOffset(E:pos(), E:pos() - vec(0, 0, 400)):pos():z() + 120 - ParkVal + clamp(-E:vel():z() / 5, 0, 400) + abs(Ayy) * 40
                    #print(_HUD_PRINTCENTER, Ayy:toString())
                }
                
            }
            else{Ayy/=4}
            Fo = Pod["W",number]-Pod["S",number]
            if(SubMode && Fo == 0){ Fo = (Pod["Space", number] - Pod["Shift", number])*UpsideDown }
            if(!Fo&&(!Pod["Active", number]||AutoStop)){ Fo = clamp(FRef:velL():y() / (-100*UpsideDown), -1, 1) }
            
            E:goRoll(90+(clamp(20+10*SubMode2-40*abs(Ayy), 0, 30)*getSide(A))*(Fo)+20*(Pod["A",number]-Pod["D",number])+-1*max(-10,min(10,Plate[1,entity]:angVel():pitch()/2)))
            Thrust[A,number]=((TarZ+(50*getSide(A))*(Ayy))-E:pos():z())*(50*(SubMode2 ? 2 : 1))-E:vel():z()*(10)
            if(SubMode2){ Thrust[A, number] = Thrust[A, number] < 0 ? 0 : Thrust[A, number] }
            if(!SubMode){
                TarZ+=0.8*(Pod["Space",number]-Pod["Shift",number])
            }
        }
        else{
            Shift = Pod["Shift", number]
            Space = Pod["Space", number]
            if(Pod["W",number]-Pod["S",number] == 0 && Pod["Shift",number]-Pod["Space",number] == 0 && AutoStop)
            {
                Space = clamp(clamp(FRef:velL():y() / -100, -1, 1), 0, 1)
                Shift = clamp(clamp(FRef:velL():y() / -100, -1, 1), -1, 0)*-1
            }
            E:goRoll(FRef:angles():roll()*getSide(A)+180*(getSide(A)==-1)-180*Shift)
            Thrust[A,number] = 10000*abs(Shift-Space)
        }
    }
}
elseif(Mode==1){
    for(A=1,Plate:count()){
        Mode20 = Pod["Mouse1", number] && Pod["Mouse2", number]
        
        if(Mode20)
        {
            AngThing = FRef:angles():roll()
            AngThing = AngThing > 0 ? AngThing - 180 : AngThing + 180
            
            #TargetAng += (Pod["S", number] - Pod["W", number]) * 0.1
            #TargetAng = clamp(TargetAng, 20, 90)
            TargetAng = 0
            
            #R = rangerOffset(FRef:pos(), FRef:pos() - vec(0, 0, 1000))
            #Thr = (1 - R:fraction()) * 10000 - FRef:vel():z() * 100
            
            if(TargetAng == 90)
            {
                Roll = clamp(((Pod["D", number] - Pod["A", number]) * 100 - FRef:angVel():pitch()) / -200, -1, 1)
                #Thrust[A,number]=clamp(Thr, 0, 10000)*Pod["Space",number]+(FRef:angVel():yaw() + 50 * (Pod["Mouse1", number] - Pod["Mouse2", number]))*(A==1||A==3||A==5 ? -1 : 1)*100
            }
            else
            {
                Roll = clamp((clamp(FRef:angles():pitch() / 40, -1, 1) * 100 - FRef:angVel():pitch()) / -100, -1, 1)
                #Thrust[A,number]=clamp(Thr, 0, 10000)*Pod["Space",number]+(FRef:angVel():yaw() + 50 * (Pod["A", number] - Pod["D", number]))*(A==1||A==3||A==5 ? -1 : 1)*100
            }
            Pitch = clamp((clamp((-AngThing - TargetAng) / 40, -1, 1) * 100 - FRef:angVel():roll()) / 100, -1, 1)
        }
        else
        {
            Roll = clamp(((Pod["D", number] - Pod["A", number]) * (Pod["Shift", number] ? 200 : 100) - FRef:angVel():pitch()) / -50, -1, 1)
            Pitch = clamp(((Pod["W", number] - Pod["S", number]) * (Pod["Shift", number] ? 200 : 100) + 10 - FRef:angVel():roll()) / 50, -1, 1)
            
        }
        Thrust[A,number]=10000*Pod["Space",number]+(FRef:angVel():yaw() + (Pod["Shift", number] ? 100 : 20) * (Pod["Mouse1", number] - Pod["Mouse2", number]))*(A==1||A==3||A==5 ? -1 : 1)*100
        ZF = clamp(FRef:velL():z() / 150, -1, 1) * -30 * getSide(A)
        AP = clamp(FRef:velL():z() / 150, -1, 1)
        AR = ((FRef:angVel():yaw() + 20 * (Pod["Mouse1", number] - Pod["Mouse2", number]))*(A==1||A==3||A==5 ? -1 : 1)) / 20
        Plate[A,entity]:goRoll(FRef:angles():roll()*getSide(A)+180*(getSide(A)==-1)+((20*(Pitch))*getSide(A)*((A<3) - (A>4)))-(20*(Roll)*(A==3 | A==4)) + ZF)
        #Thrust[A,number]=10000*Pod["Space",number]+(FRef:angVel():yaw() + 50 * (Pod["Mouse1", number] - Pod["Mouse2", number]))*(A==1||A==3||A==5 ? -1 : 1)*100
    }
}

Nig = Parking != 2
BigNig = (SubMode2 && Driver:driver():keyPressed("V") ? 5000 : 0)
TOPSPEEDNIGGA = Pod["Shift", number] ? 8000 : 4000
Bob = (TOPSPEEDNIGGA - FRef:vel():length()) / 4000
Bob = clamp(Bob, 0, 1)

CC = 1e2

T1=max(0, Thrust[1,number]*Nig+BigNig) * Bob
soundPitch(1, T1 / CC)
T2=max(0, Thrust[2,number]*Nig) * Bob
soundPitch(2, T2 / CC)
T3=max(0, Thrust[3,number]*Nig+BigNig) * Bob
soundPitch(3, T3 / CC)
T4=max(0, Thrust[4,number]*Nig) * Bob
soundPitch(4, T4 / CC)
T5=max(0, Thrust[5,number]*Nig+BigNig) * Bob
soundPitch(5, T5 / CC)
T6=max(0, Thrust[6,number]*Nig) * Bob
soundPitch(6, T6 / CC)
}
